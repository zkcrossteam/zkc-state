// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: kvpair.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeType int32

const (
	NodeType_NodeUnspecified NodeType = 0
	NodeType_NodeLeaf        NodeType = 1
	NodeType_NodeNonLeaf     NodeType = 2
	NodeType_NodeInvalid     NodeType = 3
)

// Enum value maps for NodeType.
var (
	NodeType_name = map[int32]string{
		0: "NodeUnspecified",
		1: "NodeLeaf",
		2: "NodeNonLeaf",
		3: "NodeInvalid",
	}
	NodeType_value = map[string]int32{
		"NodeUnspecified": 0,
		"NodeLeaf":        1,
		"NodeNonLeaf":     2,
		"NodeInvalid":     3,
	}
)

func (x NodeType) Enum() *NodeType {
	p := new(NodeType)
	*p = x
	return p
}

func (x NodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_kvpair_proto_enumTypes[0].Descriptor()
}

func (NodeType) Type() protoreflect.EnumType {
	return &file_kvpair_proto_enumTypes[0]
}

func (x NodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeType.Descriptor instead.
func (NodeType) EnumDescriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{0}
}

type ProofType int32

const (
	ProofType_ProofUnspecified ProofType = 0 // Default enum value, equivalent to ProofEmpty
	ProofType_ProofEmpty       ProofType = 1 // No proof
	ProofType_ProofV0          ProofType = 2
)

// Enum value maps for ProofType.
var (
	ProofType_name = map[int32]string{
		0: "ProofUnspecified",
		1: "ProofEmpty",
		2: "ProofV0",
	}
	ProofType_value = map[string]int32{
		"ProofUnspecified": 0,
		"ProofEmpty":       1,
		"ProofV0":          2,
	}
)

func (x ProofType) Enum() *ProofType {
	p := new(ProofType)
	*p = x
	return p
}

func (x ProofType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProofType) Descriptor() protoreflect.EnumDescriptor {
	return file_kvpair_proto_enumTypes[1].Descriptor()
}

func (ProofType) Type() protoreflect.EnumType {
	return &file_kvpair_proto_enumTypes[1]
}

func (x ProofType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProofType.Descriptor instead.
func (ProofType) EnumDescriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{1}
}

type DataHashRecordMode int32

const (
	DataHashRecordMode_ModeUnspecified DataHashRecordMode = 0 // Default enum value, don't use this
	DataHashRecordMode_ModeStore       DataHashRecordMode = 1
	DataHashRecordMode_ModeFetch       DataHashRecordMode = 2
)

// Enum value maps for DataHashRecordMode.
var (
	DataHashRecordMode_name = map[int32]string{
		0: "ModeUnspecified",
		1: "ModeStore",
		2: "ModeFetch",
	}
	DataHashRecordMode_value = map[string]int32{
		"ModeUnspecified": 0,
		"ModeStore":       1,
		"ModeFetch":       2,
	}
)

func (x DataHashRecordMode) Enum() *DataHashRecordMode {
	p := new(DataHashRecordMode)
	*p = x
	return p
}

func (x DataHashRecordMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataHashRecordMode) Descriptor() protoreflect.EnumDescriptor {
	return file_kvpair_proto_enumTypes[2].Descriptor()
}

func (DataHashRecordMode) Type() protoreflect.EnumType {
	return &file_kvpair_proto_enumTypes[2]
}

func (x DataHashRecordMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataHashRecordMode.Descriptor instead.
func (DataHashRecordMode) EnumDescriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{2}
}

type NodeChildren struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftChildHash  []byte `protobuf:"bytes,5,opt,name=left_child_hash,json=leftChildHash,proto3" json:"left_child_hash,omitempty"`
	RightChildHash []byte `protobuf:"bytes,6,opt,name=right_child_hash,json=rightChildHash,proto3" json:"right_child_hash,omitempty"`
}

func (x *NodeChildren) Reset() {
	*x = NodeChildren{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeChildren) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeChildren) ProtoMessage() {}

func (x *NodeChildren) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeChildren.ProtoReflect.Descriptor instead.
func (*NodeChildren) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{0}
}

func (x *NodeChildren) GetLeftChildHash() []byte {
	if x != nil {
		return x.LeftChildHash
	}
	return nil
}

func (x *NodeChildren) GetRightChildHash() []byte {
	if x != nil {
		return x.RightChildHash
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index    uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Hash     []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	NodeType NodeType `protobuf:"varint,3,opt,name=node_type,json=nodeType,proto3,enum=kvpair.NodeType" json:"node_type,omitempty"`
	// Types that are assignable to NodeData:
	//
	//	*Node_Data
	//	*Node_Children
	NodeData isNode_NodeData `protobuf_oneof:"node_data"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Node) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Node) GetNodeType() NodeType {
	if x != nil {
		return x.NodeType
	}
	return NodeType_NodeUnspecified
}

func (m *Node) GetNodeData() isNode_NodeData {
	if m != nil {
		return m.NodeData
	}
	return nil
}

func (x *Node) GetData() []byte {
	if x, ok := x.GetNodeData().(*Node_Data); ok {
		return x.Data
	}
	return nil
}

func (x *Node) GetChildren() *NodeChildren {
	if x, ok := x.GetNodeData().(*Node_Children); ok {
		return x.Children
	}
	return nil
}

type isNode_NodeData interface {
	isNode_NodeData()
}

type Node_Data struct {
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

type Node_Children struct {
	Children *NodeChildren `protobuf:"bytes,5,opt,name=children,proto3,oneof"`
}

func (*Node_Data) isNode_NodeData() {}

func (*Node_Children) isNode_NodeData() {}

// A proof to validate whether some key value pair exists in the KVStore.
type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProofType ProofType `protobuf:"varint,1,opt,name=proof_type,json=proofType,proto3,enum=kvpair.ProofType" json:"proof_type,omitempty"`
	Proof     []byte    `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{2}
}

func (x *Proof) GetProofType() ProofType {
	if x != nil {
		return x.ProofType
	}
	return ProofType_ProofUnspecified
}

func (x *Proof) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type GetRootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
}

func (x *GetRootRequest) Reset() {
	*x = GetRootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRootRequest) ProtoMessage() {}

func (x *GetRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRootRequest.ProtoReflect.Descriptor instead.
func (*GetRootRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{3}
}

func (x *GetRootRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

type GetRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *GetRootResponse) Reset() {
	*x = GetRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRootResponse) ProtoMessage() {}

func (x *GetRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRootResponse.ProtoReflect.Descriptor instead.
func (*GetRootResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{4}
}

func (x *GetRootResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type SetRootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	Hash       []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *SetRootRequest) Reset() {
	*x = SetRootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRootRequest) ProtoMessage() {}

func (x *SetRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRootRequest.ProtoReflect.Descriptor instead.
func (*SetRootRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{5}
}

func (x *SetRootRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *SetRootRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type SetRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root []byte `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *SetRootResponse) Reset() {
	*x = SetRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRootResponse) ProtoMessage() {}

func (x *SetRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRootResponse.ProtoReflect.Descriptor instead.
func (*SetRootResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{6}
}

func (x *SetRootResponse) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type GetLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte    `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	Index      uint64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Hash       []byte    `protobuf:"bytes,3,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	ProofType  ProofType `protobuf:"varint,4,opt,name=proof_type,json=proofType,proto3,enum=kvpair.ProofType" json:"proof_type,omitempty"`
}

func (x *GetLeafRequest) Reset() {
	*x = GetLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafRequest) ProtoMessage() {}

func (x *GetLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafRequest.ProtoReflect.Descriptor instead.
func (*GetLeafRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{7}
}

func (x *GetLeafRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *GetLeafRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetLeafRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *GetLeafRequest) GetProofType() ProofType {
	if x != nil {
		return x.ProofType
	}
	return ProofType_ProofUnspecified
}

type GetLeafResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node  *Node  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Proof *Proof `protobuf:"bytes,2,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
}

func (x *GetLeafResponse) Reset() {
	*x = GetLeafResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeafResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeafResponse) ProtoMessage() {}

func (x *GetLeafResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeafResponse.ProtoReflect.Descriptor instead.
func (*GetLeafResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{8}
}

func (x *GetLeafResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetLeafResponse) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type GetNonLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	Index      uint64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Hash       []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetNonLeafRequest) Reset() {
	*x = GetNonLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNonLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNonLeafRequest) ProtoMessage() {}

func (x *GetNonLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNonLeafRequest.ProtoReflect.Descriptor instead.
func (*GetNonLeafRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{9}
}

func (x *GetNonLeafRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *GetNonLeafRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetNonLeafRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type GetNonLeafResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNonLeafResponse) Reset() {
	*x = GetNonLeafResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNonLeafResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNonLeafResponse) ProtoMessage() {}

func (x *GetNonLeafResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNonLeafResponse.ProtoReflect.Descriptor instead.
func (*GetNonLeafResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{10}
}

func (x *GetNonLeafResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type SetLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte    `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	Index      uint64    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Hash       []byte    `protobuf:"bytes,3,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	Data       []byte    `protobuf:"bytes,4,opt,name=data,proto3,oneof" json:"data,omitempty"`
	ProofType  ProofType `protobuf:"varint,5,opt,name=proof_type,json=proofType,proto3,enum=kvpair.ProofType" json:"proof_type,omitempty"`
}

func (x *SetLeafRequest) Reset() {
	*x = SetLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLeafRequest) ProtoMessage() {}

func (x *SetLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLeafRequest.ProtoReflect.Descriptor instead.
func (*SetLeafRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{11}
}

func (x *SetLeafRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *SetLeafRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SetLeafRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SetLeafRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetLeafRequest) GetProofType() ProofType {
	if x != nil {
		return x.ProofType
	}
	return ProofType_ProofUnspecified
}

type SetLeafResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node  *Node  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Proof *Proof `protobuf:"bytes,2,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
}

func (x *SetLeafResponse) Reset() {
	*x = SetLeafResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLeafResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLeafResponse) ProtoMessage() {}

func (x *SetLeafResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLeafResponse.ProtoReflect.Descriptor instead.
func (*SetLeafResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{12}
}

func (x *SetLeafResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *SetLeafResponse) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type SetNonLeafRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId     []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	Index          uint64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Hash           []byte `protobuf:"bytes,3,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	LeftChildHash  []byte `protobuf:"bytes,4,opt,name=left_child_hash,json=leftChildHash,proto3" json:"left_child_hash,omitempty"`
	RightChildHash []byte `protobuf:"bytes,5,opt,name=right_child_hash,json=rightChildHash,proto3" json:"right_child_hash,omitempty"`
}

func (x *SetNonLeafRequest) Reset() {
	*x = SetNonLeafRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNonLeafRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNonLeafRequest) ProtoMessage() {}

func (x *SetNonLeafRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNonLeafRequest.ProtoReflect.Descriptor instead.
func (*SetNonLeafRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{13}
}

func (x *SetNonLeafRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *SetNonLeafRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SetNonLeafRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *SetNonLeafRequest) GetLeftChildHash() []byte {
	if x != nil {
		return x.LeftChildHash
	}
	return nil
}

func (x *SetNonLeafRequest) GetRightChildHash() []byte {
	if x != nil {
		return x.RightChildHash
	}
	return nil
}

type SetNonLeafResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *SetNonLeafResponse) Reset() {
	*x = SetNonLeafResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNonLeafResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNonLeafResponse) ProtoMessage() {}

func (x *SetNonLeafResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNonLeafResponse.ProtoReflect.Descriptor instead.
func (*SetNonLeafResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{14}
}

func (x *SetNonLeafResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type PoseidonHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	// Because the original data we want to hash can be any binary data,
	// it may not be a valid input to the poseidon hash function
	// (which takes an array of field elements as input), we may need to
	// pad or modify the original data to hash it. This parameter is the
	// transformed data which can be feeded into poseidon hash function directly.
	// As the way of transforming the of original data is non-standard,
	// the caller MUST pass the transformed data here. It is guarenteed
	// that the hash returned here is stable.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PoseidonHashRequest) Reset() {
	*x = PoseidonHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoseidonHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoseidonHashRequest) ProtoMessage() {}

func (x *PoseidonHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoseidonHashRequest.ProtoReflect.Descriptor instead.
func (*PoseidonHashRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{15}
}

func (x *PoseidonHashRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *PoseidonHashRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PoseidonHashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *PoseidonHashResponse) Reset() {
	*x = PoseidonHashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoseidonHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoseidonHashResponse) ProtoMessage() {}

func (x *PoseidonHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoseidonHashResponse.ProtoReflect.Descriptor instead.
func (*PoseidonHashResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{16}
}

func (x *PoseidonHashResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type DataHashRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId []byte `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3,oneof" json:"contract_id,omitempty"`
	// The hash of the data we want to save to the database.
	// In ModeFetch, we will fetch data hash record with this hash.
	// In ModeStore, we will save data hash record with this hash and data below.
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	// The binary data that we want save to the database.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
	// The operation mode, may be ModeFetch or ModeStore to indicate
	// whether we are storing or fetching the data.
	Mode *DataHashRecordMode `protobuf:"varint,4,opt,name=mode,proto3,enum=kvpair.DataHashRecordMode,oneof" json:"mode,omitempty"`
}

func (x *DataHashRecordRequest) Reset() {
	*x = DataHashRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHashRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHashRecordRequest) ProtoMessage() {}

func (x *DataHashRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHashRecordRequest.ProtoReflect.Descriptor instead.
func (*DataHashRecordRequest) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{17}
}

func (x *DataHashRecordRequest) GetContractId() []byte {
	if x != nil {
		return x.ContractId
	}
	return nil
}

func (x *DataHashRecordRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DataHashRecordRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataHashRecordRequest) GetMode() DataHashRecordMode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return DataHashRecordMode_ModeUnspecified
}

type DataHashRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataHashRecordResponse) Reset() {
	*x = DataHashRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kvpair_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHashRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHashRecordResponse) ProtoMessage() {}

func (x *DataHashRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kvpair_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHashRecordResponse.ProtoReflect.Descriptor instead.
func (*DataHashRecordResponse) Descriptor() ([]byte, []int) {
	return file_kvpair_proto_rawDescGZIP(), []int{18}
}

func (x *DataHashRecordResponse) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DataHashRecordResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_kvpair_proto protoreflect.FileDescriptor

var file_kvpair_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x0c, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c,
	0x65, 0x66, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb6, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2d, 0x0a, 0x09, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6b,
	0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x6e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x4f, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b,
	0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x22, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22,
	0x5a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x01, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x22, 0x67, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x76, 0x70, 0x61,
	0x69, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x73,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x67, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c,
	0x65, 0x66, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x36, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x65, 0x69,
	0x64, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x65,
	0x69, 0x64, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0xcf, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65,
	0x48, 0x03, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x4f, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x4c, 0x65, 0x61, 0x66, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x03, 0x2a, 0x3e, 0x0a, 0x09, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x55,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x56, 0x30, 0x10, 0x02, 0x2a, 0x47, 0x0a, 0x12, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x10, 0x02, 0x32, 0xca, 0x05, 0x0a, 0x06, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x12, 0x4c, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0a, 0x12, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x4c, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22,
	0x08, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x66, 0x12, 0x16, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b,
	0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x07, 0x53, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x66, 0x12, 0x16, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x53, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6b,
	0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x19, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x6e, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c,
	0x65, 0x61, 0x66, 0x12, 0x19, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x4e, 0x6f, 0x6e, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x4c, 0x65,
	0x61, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0f, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x6e, 0x6c, 0x65, 0x61, 0x76, 0x65,
	0x73, 0x12, 0x5f, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1b, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x69,
	0x64, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x69, 0x64, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x73, 0x65, 0x69, 0x64,
	0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6b, 0x76, 0x70, 0x61, 0x69, 0x72, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x12, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x61, 0x73, 0x68, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42,
	0x08, 0x5a, 0x06, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kvpair_proto_rawDescOnce sync.Once
	file_kvpair_proto_rawDescData = file_kvpair_proto_rawDesc
)

func file_kvpair_proto_rawDescGZIP() []byte {
	file_kvpair_proto_rawDescOnce.Do(func() {
		file_kvpair_proto_rawDescData = protoimpl.X.CompressGZIP(file_kvpair_proto_rawDescData)
	})
	return file_kvpair_proto_rawDescData
}

var file_kvpair_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kvpair_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_kvpair_proto_goTypes = []interface{}{
	(NodeType)(0),                  // 0: kvpair.NodeType
	(ProofType)(0),                 // 1: kvpair.ProofType
	(DataHashRecordMode)(0),        // 2: kvpair.DataHashRecordMode
	(*NodeChildren)(nil),           // 3: kvpair.NodeChildren
	(*Node)(nil),                   // 4: kvpair.Node
	(*Proof)(nil),                  // 5: kvpair.Proof
	(*GetRootRequest)(nil),         // 6: kvpair.GetRootRequest
	(*GetRootResponse)(nil),        // 7: kvpair.GetRootResponse
	(*SetRootRequest)(nil),         // 8: kvpair.SetRootRequest
	(*SetRootResponse)(nil),        // 9: kvpair.SetRootResponse
	(*GetLeafRequest)(nil),         // 10: kvpair.GetLeafRequest
	(*GetLeafResponse)(nil),        // 11: kvpair.GetLeafResponse
	(*GetNonLeafRequest)(nil),      // 12: kvpair.GetNonLeafRequest
	(*GetNonLeafResponse)(nil),     // 13: kvpair.GetNonLeafResponse
	(*SetLeafRequest)(nil),         // 14: kvpair.SetLeafRequest
	(*SetLeafResponse)(nil),        // 15: kvpair.SetLeafResponse
	(*SetNonLeafRequest)(nil),      // 16: kvpair.SetNonLeafRequest
	(*SetNonLeafResponse)(nil),     // 17: kvpair.SetNonLeafResponse
	(*PoseidonHashRequest)(nil),    // 18: kvpair.PoseidonHashRequest
	(*PoseidonHashResponse)(nil),   // 19: kvpair.PoseidonHashResponse
	(*DataHashRecordRequest)(nil),  // 20: kvpair.DataHashRecordRequest
	(*DataHashRecordResponse)(nil), // 21: kvpair.DataHashRecordResponse
}
var file_kvpair_proto_depIdxs = []int32{
	0,  // 0: kvpair.Node.node_type:type_name -> kvpair.NodeType
	3,  // 1: kvpair.Node.children:type_name -> kvpair.NodeChildren
	1,  // 2: kvpair.Proof.proof_type:type_name -> kvpair.ProofType
	1,  // 3: kvpair.GetLeafRequest.proof_type:type_name -> kvpair.ProofType
	4,  // 4: kvpair.GetLeafResponse.node:type_name -> kvpair.Node
	5,  // 5: kvpair.GetLeafResponse.proof:type_name -> kvpair.Proof
	4,  // 6: kvpair.GetNonLeafResponse.node:type_name -> kvpair.Node
	1,  // 7: kvpair.SetLeafRequest.proof_type:type_name -> kvpair.ProofType
	4,  // 8: kvpair.SetLeafResponse.node:type_name -> kvpair.Node
	5,  // 9: kvpair.SetLeafResponse.proof:type_name -> kvpair.Proof
	4,  // 10: kvpair.SetNonLeafResponse.node:type_name -> kvpair.Node
	2,  // 11: kvpair.DataHashRecordRequest.mode:type_name -> kvpair.DataHashRecordMode
	6,  // 12: kvpair.KVPair.GetRoot:input_type -> kvpair.GetRootRequest
	8,  // 13: kvpair.KVPair.SetRoot:input_type -> kvpair.SetRootRequest
	10, // 14: kvpair.KVPair.GetLeaf:input_type -> kvpair.GetLeafRequest
	14, // 15: kvpair.KVPair.SetLeaf:input_type -> kvpair.SetLeafRequest
	12, // 16: kvpair.KVPair.GetNonLeaf:input_type -> kvpair.GetNonLeafRequest
	16, // 17: kvpair.KVPair.SetNonLeaf:input_type -> kvpair.SetNonLeafRequest
	18, // 18: kvpair.KVPair.PoseidonHash:input_type -> kvpair.PoseidonHashRequest
	20, // 19: kvpair.KVPair.DataHashRecord:input_type -> kvpair.DataHashRecordRequest
	7,  // 20: kvpair.KVPair.GetRoot:output_type -> kvpair.GetRootResponse
	9,  // 21: kvpair.KVPair.SetRoot:output_type -> kvpair.SetRootResponse
	11, // 22: kvpair.KVPair.GetLeaf:output_type -> kvpair.GetLeafResponse
	15, // 23: kvpair.KVPair.SetLeaf:output_type -> kvpair.SetLeafResponse
	13, // 24: kvpair.KVPair.GetNonLeaf:output_type -> kvpair.GetNonLeafResponse
	17, // 25: kvpair.KVPair.SetNonLeaf:output_type -> kvpair.SetNonLeafResponse
	19, // 26: kvpair.KVPair.PoseidonHash:output_type -> kvpair.PoseidonHashResponse
	21, // 27: kvpair.KVPair.DataHashRecord:output_type -> kvpair.DataHashRecordResponse
	20, // [20:28] is the sub-list for method output_type
	12, // [12:20] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_kvpair_proto_init() }
func file_kvpair_proto_init() {
	if File_kvpair_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kvpair_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeChildren); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeafResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNonLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNonLeafResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLeafResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNonLeafRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNonLeafResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoseidonHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoseidonHashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHashRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kvpair_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHashRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kvpair_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Node_Data)(nil),
		(*Node_Children)(nil),
	}
	file_kvpair_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_kvpair_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kvpair_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvpair_proto_goTypes,
		DependencyIndexes: file_kvpair_proto_depIdxs,
		EnumInfos:         file_kvpair_proto_enumTypes,
		MessageInfos:      file_kvpair_proto_msgTypes,
	}.Build()
	File_kvpair_proto = out.File
	file_kvpair_proto_rawDesc = nil
	file_kvpair_proto_goTypes = nil
	file_kvpair_proto_depIdxs = nil
}
